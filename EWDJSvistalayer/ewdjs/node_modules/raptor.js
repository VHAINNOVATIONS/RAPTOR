var vista = require('VistALib');

// REST & Web Service error response formatter function

var operations = {
  initiate: {
    GET: function(ewd) {
      return vista.initiate('raptor', ewd);
    }
  },
  login: {
    GET: function(ewd, session) {
      return vista.login(ewd, session);
    }
  },
  workList: {
    GET: function(ewd, session) {
      var params = {
        file: '75.1',
        fields: ['01I', '.01', 4, 14, 16, 2, 3, 20, 6, 26, 19, 21, '7I', '5I'],
      };
      return vista.ddrLister(params, ewd);
    }
  }
};

module.exports = {

  parse: function(ewd) {
    var resource = ewd.query.rest_path.split('/')[1];
    var session;
    if (resource !== 'initiate') {
      var status = vista.authenticate(ewd);
      if (status.error) {
        return status;
      }
      if (resource !== 'login') {
        var loggedInStatus = vista.loginStatus(status.session);
        if (loggedInStatus.error) {
          return loggedInStatus;
        }
      }
      session = status.session;
    }
    var method = ewd.query.rest_method;
    if (operations[resource] && operations[resource][method]) {
      return operations[resource][method](ewd, session);
    }
    else {
      return vista.errorResponse('Invalid Request', 401);
    }
  }

};