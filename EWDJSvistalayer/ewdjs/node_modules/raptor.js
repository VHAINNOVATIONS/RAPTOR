var vista = require('VistALib');

// REST & Web Service error response formatter function

var operations = {
  initiate: {
    GET: function(ewd) {
      return vista.initiate('raptor', ewd);
    }
  },
  login: {
    GET: function(ewd, session) {
      return vista.login(ewd, session);
    }
  },
  worklist: {
    GET: function(ewd, session) {
      var params = {
        file: '75.1',
		fields: {
			PatientID: '.01I',
			PatientName: '.01',
			ExamCategory: 4,
			RequestingPhysician: 14,
			OrderedDate: 16,
			Procedure: 2,
			ImageType: 3,
			ExamLocation: 20,
			Urgency: 6,
			Nature: 26,
			Transport: 19,
			DesiredDate: 21,
			OrderFileIen: '7I',
			RadOrderStatus: '5I'
		},
		max: 100
      };
      return vista.ddrLister(params, ewd);
    }
  },
  dashboard: {
	  GET: function(ewd, session) {
		  var params = {
			file: 100,
			//flags: 'EINR',
			iens: [ewd.query.ien]
		  };
		  var results = vista.ddrGetsEntry(params, ewd);
		  return results[ewd.query.ien.toString() + ','];
	  }
  },
  

    cancelRadiologyOrder: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    createNewRadiologyOrder: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    createUnsignedRadiologyOrder: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    dashboard: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    getAllergiesDetailMap: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    getAllHospitalLocationsMap: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    getChemHemLabs: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    getDiagnosticLabsDetailMap: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    getEGFRDetailMap: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    getEHRUserID: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    getEncounterStringFromVisit: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    getHospitalLocations: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    getImagingTypesMap: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    getImplementationInstance: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    getIntegrationInfo: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    getMedicationsDetailMap: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    getNotesDetailMap: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    getOrderableItems: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    getOrderDetails: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    getOrderOverviewMap: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    getPathologyReportsDetailMap: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    getPatientDashboardMap: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    getPatientIDFromTrackingID: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    getPendingOrdersMap: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    getProblemsListDetailMap: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    getProcedureLabsDetailMap: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    getProviders: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    getRadiologyCancellationReasons: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    getRadiologyOrderChecks: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    getRadiologyOrderDialog: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    getRadiologyReportsDetailMap: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    getRawVitalSignsMap: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    getSurgeryReportsDetailMap: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    getUserSecurityKeys: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    getVisits: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    getVistaAccountKeyProblems: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    getVitalsDetailMap: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    getVitalsDetailOnlyLatestMap: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    getVitalsSummaryMap: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    initialize: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    isAuthenticated: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    isProvider: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    setPatientID: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    signNote: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    userHasKeyOREMAS: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    validateEsig: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    verifyNoteTitleMapping: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    writeRaptorGeneralNote: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },
    writeRaptorSafetyChecklist: {
            GET: function(ewd, session) {
                    return {todo:123};
            }
    },


  devtest: {
	  GET: function(ewd, session) {
		  var nvp=ewd.query.a;
		  var vmore=ewd.query.more;
		  return {a:nvp,more:vmore};
	  }
  }
  
};

module.exports = {

  parse: function(ewd) {
    var resource = ewd.query.rest_path.split('/')[1];
    var session;
    if (resource === 'devtest') {
	  //No authentication
      var method = ewd.query.rest_method;
      return operations[resource][method](ewd, session);
	} 
    if (resource !== 'initiate') {
      var status = vista.authenticate(ewd);
      if (status.error) {
        return status;
      }
      if (resource !== 'login') {
        var loggedInStatus = vista.loginStatus(status.session);
        if (loggedInStatus.error) {
          return loggedInStatus;
        }
      }
      session = status.session;
    }
    var method = ewd.query.rest_method;
    if (operations[resource] && operations[resource][method]) {
      return operations[resource][method](ewd, session);
    }
    else {
      return vista.errorResponse('Invalid Request', 401);
    }
  }

};