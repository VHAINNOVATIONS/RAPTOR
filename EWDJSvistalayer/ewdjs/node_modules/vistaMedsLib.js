
module.exports = {
	getAllMeds: function(params, session, ewd) {
		params.rpcName = "ORWPS ACTIVE";
		params.rpcArgs = [{type: "LITERAL", value: params.patientId}];
		var response = vistaLib.runRpc(params, session, ewd);
		
		var outpatientMedsRptsTabResponse = this.getOutpatientMedsFromReportsTab(params, session, ewd);
		//return outpatientMedsRptsTabResponse;
		
		var unitDoseMedsRptsTabResponse = this.getUnitDoseMedsFromReportsTab(params, session, ewd);
		
		return this.toAllMeds(response);
	},
	
	toAllMeds: function(response) {
		//return response;
		var result = {};
		var opSupplements = null;
		var udSupplements = null;
		
		return result;
	},
	
	toOutpatientMed: function(response, reportsTabObj) {
		
	},
	
	toIVMed: function(response) {
	},

	toUnitDoseMed: function(response, reportsTabObj) {
	},
		
	toInpatientForOutpatientMed: function(response, reportsTabObj) {
	},
		
	getOutpatientMedsFromReportsTab: function(params, session, ewd) {
		params.reportsTabName = "OR_RXOP:ALL OUTPATIENT~RXOP;ORDV06;28;";
		return this.toOutpatientMedsFromReportsTab(vistaLib.runReportsTabRpc(params, session, ewd));
	},
	
	toOutpatientMedsFromReportsTab: function(response) {
		var result = {}; // make a dictionary
		//return response;
		
		// next two lines are how one iterates over object properties in js
		for (var prop in response.result) {
			if (response.result.hasOwnProperty(prop)) {
				var raw = response.result[prop]["WP"];
				var current = { type: "OP", isOutpatient: true }; // initialize these defaults

				var facilityStr = raw["1"].split("^")[1].split(";"); // e.g. MedObj["1"] : "1^CAMP MASTER;500"
				current.facility = { id: facilityStr[1], name: facilityStr[0] };
				
				current.name = raw.hasOwnProperty("2") ? raw["2"].split("^")[1] : ""; // e.g. MedObj["3"] : "3^MORPHINE ORAL 10MG/5ML CC "
				current.drug = { id: raw["3"].split("^")[1], name: current.name }; // e.g. MedObj["2"] : "2^123"
				current.rxNumber = raw.hasOwnProperty("4") ? raw["4"].split("^")[1] : ""; // e.g. etc...
				current.status = raw.hasOwnProperty("5") ? raw["5"].split("^")[1] : "";
				current.quantity = raw.hasOwnProperty("6") ? raw["6"].split("^")[1] : "";
				current.expirationDate = raw.hasOwnProperty("7") ? raw["7"].split("^")[1] : "";
				current.issueDate = raw.hasOwnProperty("8") ? raw["8"].split("^")[1] : "";
				current.lastFillDate = raw.hasOwnProperty("9") ? raw["9"].split("^")[1] : "";
				current.refills = raw.hasOwnProperty("10") ? raw["10"].split("^")[1] : "";
				current.provider = raw.hasOwnProperty("11") ? { name: raw["11"].split("^")[1] } : {};
				current.cost = raw.hasOwnProperty("12") ? raw["12"].split("^")[1] : "";
				current.id = raw.hasOwnProperty("15") ? raw["15"].split("^")[1] : "";
				current.stopDate = raw.hasOwnProperty("16") ? raw["16"].split("^")[1] : "";
				
				// get sig lines from 14 - line numbers should be object properties
				if (raw.hasOwnProperty("14") && raw["14"].hasOwnProperty("1")) {
					current.sig = "";
					var currentLine = 1;
					while (raw["14"].hasOwnProperty(currentLine.toString())) {
						current.sig += (raw["14"][currentLine.toString()]).split("^")[1] + "\r\n";
						currentLine++;
					}
					current.sig = current.sig.trim();
				}
				
				result[current.id] = current;
			}
		}		
		
		return result;
	},
	
	getUnitDoseMedsFromReportsTab: function(params, session, ewd) {
		params.reportsTabName = "OR_RXUD:UNIT DOSE~RXUD;ORDV06;29;";
		return this.toUnitDoseMedsFromReportsTab(vistaLib.runReportsTabRpc(params, session, ewd));
	},
	
	toUnitDoseMedsFromReportsTab: function(response) {
		var result = {}; // make a dictionary
		//return response;
		
		// next two lines are how one iterates over object properties in js
		for (var prop in response.result) {
			if (response.result.hasOwnProperty(prop)) {
				var raw = response.result[prop]["WP"];
				var current = { type: "UD", isUnitDose: true, isInpatient: true, sig: "" }; // initialize these defaults

				var facilityStr = raw["1"].split("^")[1].split(";"); // e.g. MedObj["1"] : "1^CAMP MASTER;500"
				current.facility = { id: facilityStr[1], name: facilityStr[0] };
				
				current.id = raw.hasOwnProperty("2") ? raw["2"].split("^")[1] : ""; // e.g. MedObj["2"] : "2^123"
				current.name = raw.hasOwnProperty("3") ? raw["3"].split("^")[1] : ""; // e.g. MedObj["3"] : "3^MORPHINE ORAL 10MG/5ML CC "
				current.dose = raw.hasOwnProperty("4") ? raw["4"].split("^")[1] : ""; // e.g. etc...
				current.status = raw.hasOwnProperty("5") ? raw["5"].split("^")[1] : "";
				current.startDate = raw.hasOwnProperty("6") ? raw["6"].split("^")[1] : "";
				current.stopDate = raw.hasOwnProperty("7") ? raw["7"].split("^")[1] : "";
				current.route = raw.hasOwnProperty("8") ? raw["8"].split("^")[1] : "";
				current.schedule = raw.hasOwnProperty("9") ? raw["9"].split("^")[1] : "";
				
				current.drug = { id: current.id, name: current.name };
				
				result[current.id] = current;
			}
		}		
		
		return result;
	}
};

var vistaLib = require('VistALib');