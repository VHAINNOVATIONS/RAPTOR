<?php
/*
 * ------------------------------------------------------------------------------------
 * Created by SAN Business Consultants for RAPTOR phase 2
 * Open Source VA Innovation Project 2011-2014
 * Innovator: Dr. Jonathan Medverd
 * SAN Implementation: Andrew Casertano, Frank Font, et al
 * Contacts: acasertano@sanbusinessconsultants.com, ffont@sanbusinessconsultants.com
 * ------------------------------------------------------------------------------------
 *  
 * A contraindication engine module for the RAPTOR application. 
 *
 * HISTORY
 * 20140222 FJF - Initial stub
 * 20140625 FJF - Enhancing
 * 20140727 FJF - Enhancing
 */

require_once('core/ContraIndEngine.inc');

//TODO merge MY_MODULE_PATH and the global raptor path var!!!
define('RAPTOR_CI_MODULE_PATH', drupal_get_path('module', 'raptor_contraindications'));  
global $raptor_contraindications_path;
$raptor_contraindications_path = 'sites/all/modules/raptor_contraindications/core';

/**
 * Evaluate the contraindications for the provided data
 * @param type $data all the data that should be considered for evaluation
 * @return type array of Contraindication instances
 */
function raptor_eval_contraindications($aPatientInfo)
{
    $oCIE = \raptor\ContraIndEngine($aPatientInfo);
    
    return array();
}

/** 
 * Implements hook_help. 
 * 
 * Displays help and module information. 
 * 
 * @param path  
 *   Which path of the site we're using to display help 
 * @param arg  
 *   Array that holds the current path as returned from arg() function 
 */
function raptor_contraindications_help($path, $arg) 
{
  switch ($path)
  {
    case "admin/help#raptor_contraindications":
        return '<p>'.  t("Evaluates conditions that result in contraindication warnings.") .'</p>';
        break;
  }
}

function raptor_contraindications_menu() 
{
    $items = array();
    
    $items['raptor_ci/datadump_contraindications'] = array(
      'title' => t('Contraindications Data Dump'),
      'page callback' => 'raptor_admincontraindicationdatadump_form',
      'access arguments' => array('access content'),
      'access callback' => TRUE,        
      'description' => t('Extract to a file all contraindication rules data'),
      'type' => MENU_CALLBACK,
    );

    $items['raptor_ci/runtests'] = array(
      'title' => t('Contraindications Test'),
      'page callback' => 'raptor_contraindications_runtests_form',
      'access arguments' => array('access content'),
      'access callback' => TRUE,        
      'description' => t('Test contraindication engine'),
      'type' => MENU_CALLBACK,
    );

    return $items;
}

function raptor_admincontraindicationdatadump_form() 
{
    return drupal_get_form("raptor_admincontraindicationdatadump_form_builder");
}

function raptor_contraindications_runtests_form() 
{
    return drupal_get_form("raptor_contraindications_runtests_form_builder");
}

function raptor_contraindications_runtests_form_builder($form, $form_state)
{
    $loaded = module_load_include('inc','raptor_contraindications','parser/test/TestAll');
    if(!$loaded)
    {
        drupal_set_message('Failed to load the TestAll class', 'error');
    }
    $form[]['done_button'] = array('#type' => 'submit'
    , '#value' => t('Test Everything')
    , '#attributes' => array('title' => 'Reset everything for demo purposes.')
    );
    $form[]['done_button'] = array('#type' => 'submit'
    , '#value' => t('Exit')
    , '#attributes' => array('title' => 'Done with all operations, go back to main page.')
    );

    //drupal_exit();
    return $form;
}

function raptor_contraindications_runtests_form_builder_submit($form, &$form_state)
{
    $clickedbutton = $form_state['clicked_button'];
    $clickedvalue = $clickedbutton['#value'];
    //drupal_set_message('Clicked button = [' . $clickedvalue . ']');
    if($clickedvalue == t('Exit'))
    {
        $form_state['redirect'] = array(
            'worklist',
            array(),
          );
    } else {
        //Stay on same page!
        $loaded = module_load_include('inc','raptor_contraindications','parser/test/TestAll');
        if(!$loaded)
        {
            drupal_set_message('Failed to load the TestAll class', 'error');
        }
        $resetall = ($clickedvalue == t('Test Everything'));
        if($resetall)
        {
            //TODO
            
            \raptor_ci\TestAll::runAllTests();
            
            drupal_set_message('Ran all simple tests as of ' . date("Y-m-d H:i:s", time()));
        }
    }
}



/**
 * Send a downloadable file to the browser
 * @param type $form_state
 * @return binary file
 */
function raptor_admincontraindicationdatadump_form_builder($form_state)
{
    //Log this.
    error_log('Dumping the contraindication library information');

    //Dump it.
    header("Cache-Control: public");
    header("Content-Description: File Transfer");
    //header("Content-Length: 64000;");
    header("Content-Disposition: attachment; filename=raptor_admincontraindicationdatadump.raw");
    header("Content-Type: application/octet-stream; "); 
    header("Content-Transfer-Encoding: binary");
    $now = date('Y-m-d H:i:s');
    echo '### RAPTOR DATA DUMPED ' . $now;
    echo "\n### TIMEZONE " . date_default_timezone_get();
    echo "\n### CONTRAINDICATION DATA DUMP TOOL VERSION 20140729.1";
    
    $tablename = 'raptor_contraindication_rule';
    $result = db_select($tablename, 'n')
            ->fields('n')
            ->orderBy('rule_nm')
            ->execute();
    $sDataDump = serialize($result->fetchAllAssoc('rule_nm'));
    echo "\n>>>tablename=" . $tablename;
    echo "\n>>>rows=" . $result->rowCount();
    echo "\n>>>data=$sDataDump";
    
    $tablename = 'raptor_contraindication_flag';
    $result = db_select($tablename, 'n')
            ->fields('n')
            ->orderBy('flag_nm')
            ->execute();
    $sDataDump = serialize($result->fetchAll());
    echo "\n>>>tablename=" . $tablename;
    echo "\n>>>rows=" . $result->rowCount();
    echo "\n>>>data=$sDataDump";

    drupal_exit();  //Otherwise more stuff gets added to the file.
}




