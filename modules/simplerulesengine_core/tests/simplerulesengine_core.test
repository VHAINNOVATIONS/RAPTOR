<?php
/**
 * @file
 * ------------------------------------------------------------------------------------
 * Created by SAN Business Consultants
 * Designed and implemented by Frank Font (ffont@sanbusinessconsultants.com)
 * In collaboration with Andrew Casertano (acasertano@sanbusinessconsultants.com)
 * Open source enhancements to this module are welcome!  Contact SAN to share updates.
 *
 * Copyright 2015 SAN Business Consultants, a Maryland USA company (sanbusinessconsultants.com)
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.

 * ------------------------------------------------------------------------------------
 *  
 * This is a simple decision support engine module for Drupal.
 */

class SimpleRulesEngineCoreTestCase extends DrupalWebTestCase
{  
    public function getInfo()
    {
        return array(
          'name' => 'Simple Rules Engine module functionality',
          'description' => 'Tests hooks in the Simple Rules Engine module',
          'group' => 'Decision Support',
        );
    }

    public function setUp()
    {
        parent::setUp('simplerulesengine_core');
        $loaded = module_load_include('inc','simplerulesengine_core','parser/test/TestAll');
        if(!$loaded)
        {
            throw new \Exception('Failed to load TestAll class!');
        }
    }

    public function testParserTokenizer()
    {
        $nFailed = \simplerulesengine\TestTokenizer::runAllTests();
        $this->assertTrue($nFailed == 0, 'tokenizer tests', 'parser');
    }
    
    public function testParserMeasureExpression()
    {
        $nFailed = \simplerulesengine\TestMeasureExpression::runAllTests();
        $this->assertTrue($nFailed == 0, 'measure tests', 'parser');
    }
    
    public function testParserRuleExpression()
    {
        $nFailed = \simplerulesengine\TestRuleExpression::runAllTests();
        $this->assertTrue($nFailed == 0, 'rule tests', 'parser');
    }
    
    
}