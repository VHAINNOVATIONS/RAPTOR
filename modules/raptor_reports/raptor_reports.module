<?php
/**
 * @file
 * ------------------------------------------------------------------------------------
 * Created by SAN Business Consultants for RAPTOR phase 2
 * Open Source VA Innovation Project 2011-2015
 * VA Innovator: Dr. Jonathan Medverd
 * SAN Implementation: Andrew Casertano, Frank Font, et al
 * Contacts: acasertano@sanbusinessconsultants.com, ffont@sanbusinessconsultants.com
 * ------------------------------------------------------------------------------------
 * Copyright 2015 SAN Business Consultants, a Maryland USA company (sanbusinessconsultants.com)
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ------------------------------------------------------------------------------------
 * The reports module for the RAPTOR application. 
 */

defined('RAPTOR_REPORTS_PATH')
    or define('RAPTOR_REPORTS_PATH', dirname(__FILE__));  

function raptor_reports_help($path, $arg) 
{
  switch ($path)
  {
    case 'admin/help#raptor_reports':
        return '<p>'. t('The reports functionality of the RAPTOR application.') .'</p>';
        break;
  }
}

function raptor_reports_menu() 
{
    module_load_include('php', 'raptor_reports', 'form/ManageReportsPage');
    
    $items = array();
    $aReportClassNames  = \raptor\ManageReportsPage::getReportsList();
    $aReports = \raptor\ManageReportsPage::getReportInstances($aReportClassNames);
    foreach($aReports as $classname=>$oReport)
    {
        //Can this user run this report?
        $name = $oReport->getName(); // . '['.$base_url.']';
        $description = $oReport->getDescription();
        $menukey = $oReport->getMenuKey();
        $items[$menukey] = array(
          'title' => t($name),
          'page callback' => 'raptor_reports_runner_form',
          'access arguments' => array('access content'),
          'access callback' => TRUE,        
          'description' => t($description),
          'type' => MENU_CALLBACK,
          'file' => "$classname.php",
          'file path' => '/sites/all/modules/raptor_reports/report/',
        );
    }
    
    $items['raptor/viewReports'] = array(
      'title' => t('View Reports'),
      'page callback' => 'raptor_reports_viewreports_form',
      'access arguments' => array('access content'),
      'access callback' => TRUE,        
      'description' => t('View Reports Form'),
      'type' => MENU_CALLBACK,
      'file' => 'ManageReportsPage.php',
      'file path' => '/sites/all/modules/raptor_reports/form/',
    );
    
    return $items;
}

function raptor_reports_viewreports_form() 
{
    return drupal_get_form('raptor_reports_viewreports_form_builder');
}

/**
 * Build page that allows user to launch reports
 */
function raptor_reports_viewreports_form_builder($form, &$form_state)
{
    $oPI = new \raptor\ManageReportsPage();
    $form = array();
    $disabled = FALSE;
    if(isset($form_state['values']))
    {
        $myvalues = $form_state['values'];    
    } else {
        $myvalues = array();
    }
    if(isset($_GET['showhiddenreports']))
    {
        $showhiddenreports_tx = strtoupper($_GET['showhiddenreports']);
        $showhiddenreports = (strtoupper(trim($showhiddenreports_tx)) == 'TRUE');
    } else {
        $showhiddenreports = FALSE;
    }
    $myvalues['showhiddenreports'] = $showhiddenreports;
    return $oPI->getForm($form, $form_state, $disabled, $myvalues);
}

function raptor_reports_runner_form() 
{
    return drupal_get_form('raptor_reports_runner_form_builder');
}

/**
 * Build any report
 */
function raptor_reports_runner_form_builder($form, &$form_state)
{
    $downloadtype = NULL;
    if(isset($_GET['download']))
    {
        $downloadtype = strtoupper($_GET['download']);
    }
    
    $currentpath = strtolower(trim(current_path()));
    module_load_include('php', 'raptor_reports', 'form/ManageReportsPage');
    $aReportClassNames  = \raptor\ManageReportsPage::getReportsList();
    $aReports = \raptor\ManageReportsPage::getReportInstances($aReportClassNames);
    foreach($aReports as $classname=>$oReport)
    {
        $name = $oReport->getName();
        $menukey = $oReport->getMenuKey();
        if($currentpath == $menukey)
        {
            //Run this one!
            if(isset($form_state['values']))
            {
                $myvalues = $form_state['values'];    
            } else {
                $myvalues = array();
            }
            foreach($_GET as $key=>$value)  //Treat URL params as overrides
            {
                $myvalues[$key] = urldecode($value);
            }
            //$form = array();
            $disabled = FALSE;
            $myvalues = $oReport->getFieldValues($myvalues);
            if($downloadtype != NULL)
            {
                if(!$oReport->isDownloadSupported($downloadtype, $form_state, $myvalues))
                {
                    throw new \Exception("Download of type '$downloadtype' is NOT supported for $currentpath!");
                }
                return $oReport->downloadReport($downloadtype, $form_state, $myvalues);
            } else {
                return $oReport->getForm($form, $form_state, $disabled, $myvalues);
            }
        }
    }
    throw new \Exception("Did NOT find a report to run at path=[$currentpath]");
}

/**
 * Build any submitted report
 */
function raptor_reports_runner_form_builder_submit($form, &$form_state) 
{
    $currentpath = strtolower(trim(current_path()));
    module_load_include('php', 'raptor_reports', 'form/ManageReportsPage');
    $aReportClassNames  = \raptor\ManageReportsPage::getReportsList();
    $aReports = \raptor\ManageReportsPage::getReportInstances($aReportClassNames);
    foreach($aReports as $classname=>$oReport)
    {
        $name = $oReport->getName();
        $menukey = $oReport->getMenuKey();
        if($currentpath == $menukey)
        {
            //Run this one!
            $form_state['rebuild'] = TRUE;
        }
    }
}
